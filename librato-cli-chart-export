#!/usr/bin/env node
var config = require('./modules/librato-cli-config');
var client = require('./modules/librato-cli-client');
var flow = require('./modules/librato-cli-flow');
var program = require('commander');

program
  .usage('<space_id> <chart_id>')
  .parse(process.argv);
var args = program.args;

if (args.length < 2) {
  program.outputHelp();
  flow.error('You must specify the both the id of the space and the id of the chart contained within it in order to export');
  return;
}

var removeConflictingCompositeMetrics = function(chartDefinition) {
  for(var i = 0; i < chartDefinition.streams.length; i++) {
    if (chartDefinition.streams[i].metric && chartDefinition.streams[i].composite) {
      delete chartDefinition.streams[i].metric;
      delete chartDefinition.streams[i].source;
      delete chartDefinition.streams[i].group_function;
    }
  }

  return chartDefinition;
};

var removeIdsFromChart = function(chartDefinition) {
  delete chartDefinition.id;

  for(var i = 0; i < chartDefinition.streams.length; i++) {
    delete chartDefinition.streams[i].id;
  }

  return chartDefinition;
};

var exportSpace = function(spaceId, chart) {
  var endPoint = config.baseUrl + 'v1/spaces/' + spaceId + '/charts/' + chart;
  client.get(endPoint, function(data, response) {
                         console.log(JSON.stringify(removeConflictingCompositeMetrics(removeIdsFromChart(data)), null, 2));
                       });
};

exportSpace(args[0], args[1]);
