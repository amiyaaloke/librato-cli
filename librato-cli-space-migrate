#!/usr/bin/env node
var config = require('./modules/librato-cli-config');
var client = require('./modules/librato-cli-client');
var flow = require('./modules/librato-cli-flow');
var program = require('commander');
var fs = require('fs');

program
  .option('-f, --file [space_file]', 'Migrate a space file')
  .option('-s, --suffix [space_suffix]', 'Apply a suffix to the migrated space name')
  .parse(process.argv);

var args = program.args;

if (!program.file && args.length < 1) {
  flow.error('You must specify a space definition to migrate a space');
  return;
}

var migrateSpace = function(spaceDefinition) {
  spaceDefinition.tags = true;

  if (program.suffix) {
    spaceDefinition.name = spaceDefinition.name + ' ' + program.suffix;
  }

  spaceDefinition.charts.forEach(function(chart) {
    chart.streams.forEach(function(stream){
      if (stream.type && stream.type === 'composite') {
        stream.composite = stream.composite.replace(/((?:s|series){1}\(".+?",(?: )*)(".+?")((?:,(?: )*\{.+?\})?\))/, function(full, prefix, source, suffix) {
          if (source === '"%"' || source === '"*"') {
            return prefix + '{ }' + suffix;
          }

          sourcePattern = source.replace(/^"(.*)"$/, '$1');

          return prefix + '{ "source": "' + sourcePattern + '" }' + suffix;
        });
      }
    });
  });

  console.log(JSON.stringify(spaceDefinition, null, 2));
};

if (program.file) {
  fs.readFile(program.file, 'utf8', function (err, data) {
    if (err) {
      return flow.error(err);
    }

    migrateSpace(JSON.parse(data));
  });
} else {
  migrateSpace(JSON.parse(args[0]));
}
