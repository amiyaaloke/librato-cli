#!/usr/bin/env node
var config = require('./modules/librato-cli-config');
var client = require('./modules/librato-cli-client');
var flow = require('./modules/librato-cli-flow');
var program = require('commander');

program.parse(process.argv);
var args = program.args;

if (args.length < 1) {
  flow.error('You must specify the metric name or pattern of the metric you wish to alter');
  return;
}

if (args.length < 2) {
  flow.error('No attributes were specified, nothing was done');
  return;
}

var getMatchingMetrics = function(metricName, attributes) {
  var endPoint = config.baseUrl + "metrics?name=" + metricName;
  client.get(endPoint, function (data, response) {
                         for (var i = 0; i < data.metrics; i++) {
                           var metric = data.metrics[i];
                           console.log('Updating: ' + metric.name);
                           updateAttributes(metric.name, attributes);
                         }
                       });
};

var updateAttributes = function(metricName, attributes) {
  var attributeData = '';

  for (var i = 1; i < attributes.length; i++) {
    if (attributeData.length > 0) {
      attributeData += '&';
    }

    var attributeKeyValuePair = attributes[i].split('=');
    attributeData += 'attributes[' + attributeKeyValuePair[0] + ']=' + attributeKeyValuePair[1];
  }

  var payload = {
    data: attributeData,
    headers: { "Content-Type": "application/x-www-form-urlencoded" }
  };

  var endPoint = config.baseUrl + "metrics/" + metricName;
  client.put(endPoint, payload, function (data, response) {
                                  console.log(response.statusCode + ': ' + response.statusMessage);
                                  console.log(JSON.stringify(data, null, 2));
                                });
};

updateAttributes(args[0], args.slice(0));
